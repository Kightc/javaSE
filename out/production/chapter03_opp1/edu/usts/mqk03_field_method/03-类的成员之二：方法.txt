
类的成员之二：方法（method)

1.使用方法的好处
    方法的理解：方法是类或对象行为特征的抽象，用来完成某个功能的实现
    方法的好处：实现代码的重用，减少冗余，简化代码


2.使用举例
    Math. random()的random()方法
    Math.sqrt(x)的sqrt(x)方法
    system.out.println(x)的println(x)方法
    new Scanner(System.in).nextInt()的nextInt()方法
    Arrays类中的binarySearch()方法、sort()方法、equals()方法

3.声明举例
    public void eat()
    public void sleep(int hour)
    public String interests(String hobby)
    public int getAge()

4.方法声明的格式(重要）
    权限修饰符 [其他修饰符] 返回值类型 方法名(形参列表)[throws 异常类型]{// 方法头、方法的声明
        //方法体
    }

    注：[]中的内容不是必须的，以后再讲


5.具体方法声明的细节
    5.1权限修饰符
        ①Java规定了哪些修饰符：private、缺省、protected、public（封装性的时候讲）
    5.2返回值类型：描述当调用完此方法时，是否需要返回一个结果
        分类：无返回值类型，使用void即可  比如system.out.println(x)的println(x)方法，Arrays类中的sort()方法

             有具体的返回值类型:需要指明具体的返回数据类型，可以使基本数据类型，也可以是引用数据类型
                需要在方法内配合使用“return + 返回值类型的变量或常量”
                比如:Math. random(), new Scanner(System.in).nextInt()

        [经验] 我们在声明方法时，要不要提供返回值类型呢
            根据方法的具体的功能来决定（具体问题具体分析）
            根据题目的要求

    5.3方法名：属于标识符  需要满足标识符的规定和规范，需要“见名知意”

    5.4形参列表：形参属于局部变量，且可以声明多个
        格式：(形参类型1 形参1, 形参类型2 形参2, ..... )
        分类：无形参列表、有行擦列表
            无形参列表：不能省略一对() 比如:Math. random(), new Scanner(System.in).nextInt()
            有形参列表：根据方法调用时需要的不确定的变量的类型和个数，确定形参的类型和个数
                比如：Arrays类中的binarySearch()方法、sort()方法、equals()方法

        [经验] 我们在声明方法时，是否需要形参列表呢
            根据方法中具体的功能来决定，即具体问题具体分析
            根据题目要求

    5.5方法体：当我们调用一个方法时，真正执行额代码，体现了此方法的功能
6.注意点：
    java中的方法不能独立存在，所有的方法必须声明在类中
    方法必须先声明后使用
    Java中的方法不调用不执行，每调用一次就执行一次
    方法内可以调用本类中的其他方法或属性
    方法内不能定义方法

7.关键字 return
    7.1return的作用
        作用1：结束一个方法
        作用2：结束一个方法的同时，可以返回数据给方法的调用者（方法声明中如果有返回值类型，则方法需要搭配return使用）

    7.2使用注意点
        return后面不能有执行语句

8.方法调用的的内存解析
    形参:方法在声明时，一对()内声明的一个或多个形式参数，简称形参
    实参:方法再被调用时，实际传递给形参的变量或者常量，就称为实际参数，简称实参

    过程概述