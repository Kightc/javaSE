
1.面向对象的三条主线：
    Java类及类的成员：（重点）属性、方法、构造器；（熟悉）代码块、内部类
    面向对象的特征：封装、继承、多态、（抽象）
    其他关键字的使用：this、super、package、import、static、final、interface、abstract等
2.面向过程编译（POP） vs 面向对象编译（OOP）
    2.1描述两者的区别
        面向过程：
            ·关注的焦点是过程︰过程就是操作数据的步骤。
            如果某个过程的实现代码重复出现，那么就可以把这个过程抽取为一个函数。
            这样就可以大大简化冗余代码，便于维护。
            ·典型的语言:c语言
            ·代码结构:以函数为组织单位。
            ·是一种“执行者思维”，适合解决简单问题。扩展能力差、后期维护难度较大。

        面向对象：
            ·关注的焦点是类∶在计算机程序设计过程中，
            参照现实中事物，将事物的属性特征、行为特征抽象出来，用类来表示。
            ·典型的语言:Java、C#、C++、Python、Ruby和PHP等
            ·代码结构:以类为组织单位。每种事物都具备自己的属性和行为/功能。
            ·是一种“设计者思维”，适合解决复杂问题。代码扩展性强、可维护性高。
    2.2两者关系

3.
    面向对象编程的两个核心概念：
        类（Class）、对象（Object）
    谈谈这两个概念是如何理解?
        类：具有相同特征的事物的抽象描述，是‘抽象的’、概念上的描述
        对象：实际存在的该类事物的每个个体，是具体的，因而也被称为实例（instance）。



4.类的声明与使用
    4.1体会设计类，其实就是设计类成员


    4.2类的内部成员一、二
        成员之一：属性、成员变量、field（字段、域）
        成员之二：（成员）方法、函数、method


    4.3类的实例化
        等价描述：类的实例化 <=> 创建类的对象 <=> 创建类的实例
        格式：类类型 对象名 = 通过new创建的对象实体
        举例：Phone p1 = new Phone();
             Scanner sc = new Scanner(System.in);
             String str = new String();

5.面向对象完成具体功能操作的三步流程（非常重要）
    步骤1：创建类并设计类的内部成员（属性、方法）
    步骤2：创建类的对象。比如Phone p1 = new Phone()；
    步骤3：通过对象来调用其内部声明的属性和方法，完成相关的功能。